# This is an example configuration for Docker Compose. Make sure to atleast update
# the cookie secret & postgres database password.
#
# Some other recommendations:
# 1. To persist Postgres data, assign it a volume host location.
# 2. Split the worker service to adhoc workers and scheduled queries workers.
version: '2'
services:
  server:
    image: redash/redash:latest
    command: server
    depends_on:
      - postgres
      - redis
    ports:
      - "5000:5000"
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: "INFO"
      REDASH_REDIS_URL: "redis://redis:6379/0"
      REDASH_DATABASE_URL: "postgresql://postgres@postgres/postgres"
      REDASH_COOKIE_SECRET: ${COOKIE_SECRET}
      REDASH_WEB_WORKERS: 4
      REDASH_MAIL_SERVER: "email-smtp.us-east-1.amazonaws.com" # default: localhost
      REDASH_MAIL_PORT: "587" # default: 25
      REDASH_MAIL_USE_TLS: "true" # default: false
      REDASH_MAIL_USERNAME: ${MAIL_USERNAME}
      REDASH_MAIL_PASSWORD: ${MAIL_PASSWORD}
      REDASH_MAIL_DEFAULT_SENDER: ${MAIL_SENDER}
      REDASH_HOST: ${HOST}
    restart: always
  worker:
    image: redash/redash:latest
    command: scheduler
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: "INFO"
      REDASH_REDIS_URL: "redis://redis:6379/0"
      REDASH_DATABASE_URL: "postgresql://postgres@postgres/postgres"
      QUEUES: "queries,scheduled_queries,celery"
      WORKERS_COUNT: 2
      REDASH_MAIL_SERVER: "email-smtp.us-east-1.amazonaws.com" # default: localhost
      REDASH_MAIL_PORT: "587" # default: 25
      REDASH_MAIL_USE_TLS: "true" # default: false
      REDASH_MAIL_USERNAME: ${MAIL_USERNAME}
      REDASH_MAIL_PASSWORD: ${MAIL_PASSWORD}
      REDASH_MAIL_DEFAULT_SENDER: ${MAIL_SENDER}
      REDASH_HOST: ${HOST}
    restart: always
  redis:
    image: redis:3.0-alpine
    restart: always
  postgres:
    image: postgres:9.5.6-alpine
    volumes:
      - /opt/postgres-data:/var/lib/postgresql/data
    restart: always
  nginx:
    image: redash/nginx:latest
    ports:
      - "80:80"
    depends_on:
      - server
    links:
      - server:redash
    restart: always
